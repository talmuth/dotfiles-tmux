unbind C-b
set-option -g prefix ^A
bind a send-prefix

# Bind appropriate commands similar to OLOUR (Solarized 256)

# default statusbar colors
set-option -g status-bg colour0
set-option -g status-fg colour136 #yellow
set-option -g status-attr default

# default window title colors
set-window-option -g window-status-fg colour0 #base0
set-window-option -g window-status-bg default
#set-window-option -g window-status-attr dim

# pane border
set-option -g pane-border-fg colour235 #base02
set-option -g pane-active-border-fg colour240 #base01

# message text
set-option -g message-bg colour235 #base02
set-option -g message-fg colour166 #orange

# pane number display
set-option -g display-panes-active-colour colour33 #blue
set-option -g display-panes-colour colour166 #orange

# clock
set-window-option -g clock-mode-colour colour64 #green

# status bar
# active window title colors
set-window-option -g window-status-current-fg colour154
set-window-option -g window-status-current-bg default
#set-window-option -g window-status-current-attr bright

set-option -g status-left-length 32
set-option -g status-right-length 150
set-option -g status-utf8 on
set-option -g status-interval 2
set-option -g status-justify left

if-shell 'test -z "$POWERLINE_COMMAND"' "set-option -g status-left '#(~/.tmux/tmux-powerline/powerline.sh left)'" "set-option -g status-left '#(eval $POWERLINE_COMMAND tmux left)'"

set-option -g window-status-current-format "#[fg=colour0,bg=colour39]⮀#[fg=colour16,bg=colour39,noreverse,bold] #I ⮁ #W #[fg=colour39,bg=colour0,nobold]⮀"
set-option -g window-status-format "#[fg=white,bg=colour0] #I #W "
if-shell 'test -z "$POWERLINE_COMMAND"' "set-option -g status-right '#(~/.tmux/tmux-powerline/powerline.sh right)'" "set-option -g status-right '#(eval $POWERLINE_COMMAND tmux right)'"

# lockscreen ^X x
unbind ^X
bind ^X lock-server
unbind x
bind x lock-server

# screen ^C c
unbind ^C
bind ^C new-window
unbind c
bind c new-window

# detach ^D d
unbind ^D
bind ^D detach

# displays *
unbind *
bind * list-clients

# next ^@ ^N sp n
unbind ^@
bind ^@ next-window
unbind ^N
bind ^N next-window
unbind " "
bind " " next-window
unbind n
bind n next-window

# title A
unbind A
bind A command-prompt "rename-window %%"

# other ^A
unbind ^A
bind ^A last-window

# prev ^H ^P p ^?
unbind ^H
bind ^H previous-window
unbind ^P
bind ^P previous-window
unbind p
bind p previous-window
unbind BSpace
bind BSpace previous-window

# windows ^W w
unbind ^W
bind ^W list-windows
unbind w
bind w list-windows

# kill K k
unbind K
bind K confirm-before "kill-window"
unbind k
bind k confirm-before "kill-window"

# redisplay ^L l
unbind ^L
bind ^L refresh-client
unbind l
bind l refresh-client

# " windowlist -b
unbind '"'
bind '"' choose-window

# use Escape for entering copy mode, like screen
bind Escape copy-mode

# less time between commands in a command sequence
set -s escape-time 0

# use vi-style key bindings
set-option -g mode-keys vi

# start numbering windows a 1
set -g base-index 1

# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size
# of any client connected to *that window*. Much more reasonable.
set-window-option -g aggressive-resize on

# the visual bell causes a micro delay when typing. Tab completion triggers
# the bell and typing halts for a second and it's really annoying.
set-option -g visual-bell off

# scrollback buffer
set-option -g history-limit 4096

# hijack the TERM variable for shells inside tmux
# According to the tmux FAQ this MUST be "screen" or a derivative
# http://tmux.svn.sourceforge.net/viewvc/tmux/trunk/FAQ
set-option -g default-terminal "screen-bce"

set -g set-titles on
set-option -g set-titles-string '#H:#S.#I.#P #W #T'
